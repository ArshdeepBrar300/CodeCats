Next Permutation

class Solution {
public:

    int search(vector<int>& nums,int ind){
        int key=nums[ind];
        int ans=INT_MAX;int j=-1;
        for(int i=ind+1;i<nums.size();i++){
            if(nums[i]-key>0){
                ans=min(ans,nums[i]);
                j=i;
            }


        } return j;
    }
    void nextPermutation(vector<int>& nums) {
        vector<int> hash(101,0);
        for(int i=0;i<nums.size();i++) hash[nums[i]]++;
        int i;
        for( i=nums.size()-1;i>0;i--){

            if(nums[i]>=nums[i-1]){
                // if(i==nums.size()-1) {swap(nums[i],nums[i-1]);break;}
                // else{
                int ind=search(nums,i-1);
                cout<<ind;
                if(ind!=-1){
                swap(nums[i-1],nums[ind]);
                sort(nums.begin()+i,nums.end());
                break;}
                
                

            }


        }
        if(i==0)
        sort(nums.begin(),nums.end());



        
    }
};