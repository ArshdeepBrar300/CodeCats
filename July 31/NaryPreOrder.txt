N-ary Tree Preorder Traversal

/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:

    vector<int> preorder(Node* root) {
        vector<int>ans;
        if(root){
            ans.push_back(root->val);
            
            for(int i=0;i<root->children.size();i++){
                if(root->children[i]==NULL) continue;
                vector<int>r=preorder(root->children[i]);
                ans.insert(ans.end(),r.begin(),r.end());
            }
        }
        return ans;
        
    }
};