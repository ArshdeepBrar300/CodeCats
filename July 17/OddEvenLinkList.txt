ODD EVEN LINK LIST

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        ListNode *slow,*fast,*temp1,*temp2,*start;
        if(!head || !head->next || !head->next->next){
            return head;
        }
        slow=head;
        start=head->next;
        fast=head->next->next;
        temp1=slow->next;
        while(fast){
            temp2=fast->next;
            slow->next=fast;
            
            
            temp1->next=temp2;
            slow=fast;
            if(temp2==NULL){
                
                fast=temp2;break;
            }
            fast=temp2->next;
            temp1=temp2;
        }
        slow->next=start;
        return head;
        
    }
};