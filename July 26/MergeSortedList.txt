Merge Two Sorted List

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        ListNode* h1=list1,*h2=list2;
        ListNode *temp=new ListNode();
          if(!list1) return list2;
        if(!list2) return list1;
        if(h1->val>h2->val){
            h1=list2;h2=list1;
        }
        ListNode* ans=h1;
      

        while(h1&&h2){
            if(h1->val<=h2->val){
                temp->next=h1;
                temp=h1;
                h1=h1->next;

            }
            else{
                 temp->next=h2;
                temp=h2;
                h2=h2->next;

            }
        }
        while(h1){
             temp->next=h1;
                temp=h1;
                h1=h1->next;

        }
        while(h2){  temp->next=h2;
                temp=h2;
                h2=h2->next;

        }
        return ans;
        
    }
};